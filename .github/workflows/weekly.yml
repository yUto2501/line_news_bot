name: weekly-news

on:
  schedule:
    - cron: "20 8 * * FRI"       # 17:20 JST 起動
    - cron: "30-59/10 8 * * FRI" # 17:30/40/50 JST キープアライブ（10分おき）
    - cron: "0 9 * * FRI"        # 18:00 JST 本番配信
  workflow_dispatch:

jobs:
  at_1720_warmup:
    if: github.event.schedule == '20 8 * * FRI' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Warm-up (boot-check)
        run: |
          curl -sS --max-time 30 \
            "https://line-news-bot-7bh8.onrender.com/render/boot-check?text=line-news-bot_booted!&scheduledTime=09:00"

  keepalive_window:
    if: github.event.schedule == '30-59/10 8 * * FRI'
    runs-on: ubuntu-latest
    steps:
      - name: Keepalive (every 10 min until 17:50)
        run: |
          curl -sS --max-time 20 \
            "https://line-news-bot-7bh8.onrender.com/render/boot-check?text=waiting_until_the_scheduled_time&scheduledTime=09:00" || true

  at_1800_publish:
    if: github.event.schedule == '0 9 * * FRI'
    runs-on: ubuntu-latest
    steps:
      - name: Wait until service is up (max 15 min)
        run: |
          deadline=$(( $(date -u +%s) + 15*60 ))  # 18:15 JST まで待機
          while [ $(date -u +%s) -lt $deadline ]; do
            code=$(curl -s -o /dev/null -w '%{http_code}' \
              "https://line-news-bot-7bh8.onrender.com/render/boot-check?text=preflight&scheduledTime=09:00")
            [ "$code" = "200" ] && exit 0
            sleep 10
          done
          echo "Service not ready by deadline"; exit 1
      - name: Broadcast weekly (single shot)
        run: |
          curl -sS --fail \
            "https://line-news-bot-7bh8.onrender.com/broadcast-weekly?to=all-groups"
